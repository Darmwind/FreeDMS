Functions provided by freeDMS

Just for _admin (inside _tools)
================

MAKE_PROJECT <project-name>
Creates a new project or makes an existing directory a new project.
  * Depending on the options ask for a project-name or a directory.
  * Create the directory or cd to the selected directory.
  * Copy .freeDMS and _admin to the directory.
  * Call MANAGE_TEAM (default: existing team)
  * Copy the ADD_FOLDERS_HERE button.

ADD_ALL_FOLDERS
Adds all freeDMS-folders up to the deepest hierarchy to the project. (Not to subprojects)

REMOVE_EMPTY_FOLDERS
Removes all empty folders even non freeDMS-folders and also in subprojects.

ARCHIVE_PROJECT
Allows to archive an existing project
  * copy all data inside _keep_this-folders into to _admin/_check_this-folder of the master project.
  * Remove Links
  * ZIP-Directory to _archive

MANAGE_TEAM
Allows to edit the hidden TEAM-file inside .freeDMS and the parses the file and evaluates it.
  * Open the TEAM-file inside _freeDMS for edit.
  * Parse and evaluate the TEAM-file after OK.
  * (Depending on configurations in the first section of the TEAM-file create _name-folders inside _team)
  * (If team-members have been removed their corresponding _name-folders are compressed)
  * User may then remove this files as they like.
  * There is no automatic update to subprojects yet. Adding or removing members will not affect subprojects.
  * Roles can be defined, but are not used yet.

FIND
Allows an advanced search for files that are or could be in a certain freeDMS-folder.
  * Provides a dialog to select a freeDMS-folder. (Folder-type)
  * Searches for all files in folders with this name, as well as in all sub-folders.
  	i.e. if you search for _finance also files in _finance/_sales will be found.
  * Searches for all files in superfolders if the forder-type does not exist yet - also in sub-projects.
  	i.e. if you search for _sales also files in _finance or a subproject will be found if _sales is not present there.
  * Creates a new folder with the name _found_in_folder-type (i.e. _found_in_finance)
  * Adds relative links to all found files to this folder.

ADD_FILE_LINK_HERE, ADD_FOLDER_LINK_HERE
Allows to search for files and folders and adds a relative link to the current directory.
The advantage of relative links is, that they remain valid in case of renaming the project file.
The idea is, that an admin collects some files inside the _check_this-folder that they want to check on a regular basis.


For programs and _admin: (Not available yet)
=========================

Some programs like mailclient, messenger, finance-software, documentation-software 
may have access to directories of a certain type.

GET_ALL <_directoryname> [optional: <project_directory>]
Get a list of all files (with path) inside <_directorytname>.
  * Search for all files with the <_directoryname> within the <project_directory>
  * Show them in a filebrowser

GET_ALL_PROJECTS <project_directory>
Get a list of all sub_projects of <project_directory>
  * Search for all subdirectories in <project_directory> with a _freeDMS inside.
  * Show them in a filebrowser

SAVE_TO <project_path/_freeDMS_directory/filename>
Saves the file to a _freeDMS_directory.
  * if this does not exist yet, create it (with all superdirectories)



These functions might be programmed in python or batch-scripts.
They will have to be adopted for various OS.



For everyone:
=============

ADD_FOLDERS_HERE
Show possible freeDSM-subdirectories of the next level
  * a link to this can be found in every freeDSM-folder
    (as long as the function is not implemented in filebrowsers.)
  * copies the appropriate folders to the current folder
  * Adds a ADD_FOLDERS_HERE_APP and a FIND-APP inside.
  * Adds a _keep_this folder inside and decorates it.
  * Replaces the ADD_FOLDERS_HERE-App in the current directory by a REMOVE_EMPTY_FOLDERS-App.

REMOVE_EMPTY_FOLDERS
Removes all empty folders inside the current folder up to all subfolders.

FIND
Allows an advanced search for files that are or could be in a certain freeDMS-folder.
  * Provides no dialog to select a folder (Folder-type). Instead takes the folder where it is located.
  	i.e. if the FIND-App is located inside _finance it will search for files in _finance and all subprojects.
	in Fact this function steps one folder down and searches there for the folder-type. 
	So from the fist folder-level it will also search in subprojects. From the second in will not.
  * Searches for all files in folders with this name, as well as in all sub-folders.
  	i.e. if you search for _finance also files in _finance/_sales will be found.
  * Searches for all files in superfolders if the forder-type does not exist yet - also in sub-projects.
  	i.e. if you search for _sales also files in _finance or a subproject will be found if _sales is not present there.
  * Creates a new folder with the name _found_in_folder-type (i.e. _found_in_finance)
  * Adds relative links to all found files to this folder.






Links:
======
There are a view systematic links that must be generated and maintained.
These links provide a communikation pipeline from sub-projects to their super-projects
and vice versa.
Maybe all this is captured by the function GET_ALL _communication/_super

